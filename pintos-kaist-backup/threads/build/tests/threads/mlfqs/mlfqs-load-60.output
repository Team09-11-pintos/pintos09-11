Kernel command line: -q -mlfqs run mlfqs-load-60
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  39,270,400 loops/s.
Boot complete.
Executing 'mlfqs-load-60':
(mlfqs-load-60) begin
(mlfqs-load-60) Starting 60 niced load threads...
(mlfqs-load-60) Starting threads took 0 seconds.
Kernel PANIC at ../../threads/thread.c:239 in thread_unblock(): assertion `t->status == THREAD_BLOCKED' failed.
Call stack: 0x8004213779 0x8004206dd2 0x8004207ab0 0x800420d547 0x8004208a61 0x8004208e7f 0x80042071d9.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 1024 ticks
Thread: 995 idle ticks, 29 kernel ticks, 0 user ticks
Console: 